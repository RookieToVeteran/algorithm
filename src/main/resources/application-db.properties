
#数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/pro?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true

#
##初始化连接 ---主数据源
#datasource.initial-size=1
##最大空闲连接
#datasource.max-idle=1
##最小空闲连接
#datasource.min-idle=1
##最大连接数量
#datasource.max-active=50
##是否在自动回收超时连接的时候打印连接的超时错误
#datasource.log-abandoned=true
##是否自动回收超时连接
#datasource.remove-abandoned=true
##超时时间(以秒数为单位)
#datasource.remove-abandoned-timeout=180
##超时等待时间以毫秒为单位 60000毫秒/1000等于60秒
#datasource.max-wait=60000
##检测数据库的查询语句
#datasource.validation-query=select 1
#datasource.test-on-borrow=true
#datasource.test-while-idle=true
##每隔30s检测空闲超过半分钟的连接
#datasource.min-evictable-idle-time-millis=600000
#datasource.time-between-eviction-runs-millis=30000
#datasource.num-tests-per-eviction-run=10

mybatis.mapper-locations=classpath*:com.algorithm.project.mapper.*Mapper.xml
mybatis.cacheIndex=5